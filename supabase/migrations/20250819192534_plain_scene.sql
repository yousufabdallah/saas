/*
  # ุฅูุดุงุก ุฏุงูุฉ ููุชุญูู ูู ุตูุงุญูุงุช ุงูุฃุฏูู

  1. ุฅูุดุงุก ุฏุงูุฉ RPC ููุชุญูู ูู ุงูุฃุฏูู
    - ุฏุงูุฉ `check_platform_admin` ููุชุญูู ูู ุตูุงุญูุงุช ุงููุณุชุฎุฏู
    - ุฏุงูุฉ `add_platform_admin` ูุฅุถุงูุฉ ุฃุฏูู ุฌุฏูุฏ

  2. ุฅุถุงูุฉ ุงููุณุชุฎุฏู ุงูุฃุฏูู
    - ุงูุชุญูู ูู ูุฌูุฏ ุงููุณุชุฎุฏู
    - ุฅุถุงูุชู ูุฃุฏูู ููุตุฉ

  3. ุชุดุฎูุต ุดุงูู
    - ุนุฑุถ ุฌููุน ุงููุนูููุงุช ุงููุทููุจุฉ
*/

-- ุฅูุดุงุก ุฏุงูุฉ ููุชุญูู ูู ุตูุงุญูุงุช ุงูุฃุฏูู
CREATE OR REPLACE FUNCTION public.check_platform_admin(user_id uuid)
RETURNS boolean
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
  RETURN EXISTS (
    SELECT 1 FROM public.platform_admins 
    WHERE platform_admins.user_id = check_platform_admin.user_id
  );
END;
$$;

-- ุฅูุดุงุก ุฏุงูุฉ ูุฅุถุงูุฉ ุฃุฏูู ููุตุฉ
CREATE OR REPLACE FUNCTION public.add_platform_admin(user_email text)
RETURNS json
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
  target_user_id uuid;
  result json;
BEGIN
  -- ุงูุจุญุซ ุนู ุงููุณุชุฎุฏู
  SELECT id INTO target_user_id 
  FROM auth.users 
  WHERE email = user_email;
  
  -- ุงูุชุญูู ูู ูุฌูุฏ ุงููุณุชุฎุฏู
  IF target_user_id IS NULL THEN
    result := json_build_object(
      'success', false,
      'message', 'ุงููุณุชุฎุฏู ุบูุฑ ููุฌูุฏ',
      'user_email', user_email
    );
    RETURN result;
  END IF;
  
  -- ุฅุถุงูุฉ ุงููุณุชุฎุฏู ูุฃุฏูู
  INSERT INTO public.platform_admins (user_id) 
  VALUES (target_user_id)
  ON CONFLICT (user_id) DO NOTHING;
  
  -- ุฅุฑุฌุงุน ุงููุชูุฌุฉ
  result := json_build_object(
    'success', true,
    'message', 'ุชู ุฅุถุงูุฉ ุงููุณุชุฎุฏู ูุฃุฏูู ููุตุฉ ุจูุฌุงุญ',
    'user_id', target_user_id,
    'user_email', user_email
  );
  
  RETURN result;
END;
$$;

-- ุชุดุฎูุต ุดุงูู ูุฅุถุงูุฉ ุงูุฃุฏูู
DO $$
DECLARE
    target_email TEXT := 'yousufalbahlouli@hotmail.com';
    user_record RECORD;
    admin_count INTEGER;
    result_json JSON;
BEGIN
    RAISE NOTICE '=== ๐ ุชุดุฎูุต ุดุงูู ูุฅุนุฏุงุฏ ุฃุฏูู ุงูููุตุฉ ===';
    RAISE NOTICE 'ุงูุจุญุซ ุนู ุงููุณุชุฎุฏู: %', target_email;
    
    -- 1. ุงูุจุญุซ ุนู ุงููุณุชุฎุฏู
    SELECT id, email, created_at, email_confirmed_at, last_sign_in_at
    INTO user_record
    FROM auth.users 
    WHERE email = target_email;
    
    IF user_record.id IS NOT NULL THEN
        RAISE NOTICE 'โ ุชู ุงูุนุซูุฑ ุนูู ุงููุณุชุฎุฏู:';
        RAISE NOTICE '   - ID: %', user_record.id;
        RAISE NOTICE '   - ุงูุจุฑูุฏ: %', user_record.email;
        RAISE NOTICE '   - ุชุงุฑูุฎ ุงูุชุณุฌูู: %', user_record.created_at;
        RAISE NOTICE '   - ุชุฃููุฏ ุงูุจุฑูุฏ: %', 
            CASE WHEN user_record.email_confirmed_at IS NOT NULL THEN 'ูุคูุฏ' ELSE 'ุบูุฑ ูุคูุฏ' END;
        RAISE NOTICE '   - ุขุฎุฑ ุชุณุฌูู ุฏุฎูู: %', 
            COALESCE(user_record.last_sign_in_at::TEXT, 'ูู ูุณุฌู ุฏุฎูู ุจุนุฏ');
        
        -- 2. ุงุณุชุฎุฏุงู ุงูุฏุงูุฉ ูุฅุถุงูุฉ ุงูุฃุฏูู
        SELECT public.add_platform_admin(target_email) INTO result_json;
        RAISE NOTICE '๐ ูุชูุฌุฉ ุฅุถุงูุฉ ุงูุฃุฏูู: %', result_json;
        
        -- 3. ุงูุชุญูู ุงูููุงุฆู
        SELECT COUNT(*) INTO admin_count
        FROM public.platform_admins
        WHERE user_id = user_record.id;
        
        RAISE NOTICE '๐ฏ ุงููุชูุฌุฉ ุงูููุงุฆูุฉ: %', 
            CASE WHEN admin_count > 0 THEN 'ุงููุณุชุฎุฏู ุฃุฏูู ููุตุฉ โ' ELSE 'ูุดู ูู ุงูุฅุนุฏุงุฏ โ' END;
            
        -- 4. ุงุฎุชุจุงุฑ ุฏุงูุฉ ุงูุชุญูู
        RAISE NOTICE '๐งช ุงุฎุชุจุงุฑ ุฏุงูุฉ ุงูุชุญูู: %',
            CASE WHEN public.check_platform_admin(user_record.id) THEN 'ูุฌุญ โ' ELSE 'ูุดู โ' END;
            
    ELSE
        RAISE NOTICE 'โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุณุชุฎุฏู: %', target_email;
        RAISE NOTICE '๐ก ุชุฃูุฏ ูู:';
        RAISE NOTICE '   1. ุชุณุฌูู ุงูุฏุฎูู ูุฑุฉ ูุงุญุฏุฉ ุนูู ุงูุฃูู ุจูุฐุง ุงูุจุฑูุฏ';
        RAISE NOTICE '   2. ุชูุนูู ุงููุตุงุฏูุฉ ุจุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูู Supabase';
        RAISE NOTICE '   3. ุฅูุบุงุก ุชูุนูู ุชุฃููุฏ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู';
    END IF;
    
    -- 5. ุนุฑุถ ุฌููุน ุฃุฏูู ุงูููุตุฉ
    RAISE NOTICE '=== ๐ฅ ุฌููุน ุฃุฏูู ุงูููุตุฉ ===';
    
    FOR user_record IN 
        SELECT u.id, u.email, pa.created_at as admin_since
        FROM public.platform_admins pa
        JOIN auth.users u ON pa.user_id = u.id
        ORDER BY pa.created_at
    LOOP
        RAISE NOTICE 'ุฃุฏูู: % | ุงูุจุฑูุฏ: % | ููุฐ: %', 
            user_record.id, 
            user_record.email, 
            user_record.admin_since;
    END LOOP;
    
    RAISE NOTICE '=== โ ุงูุชูุงุก ุงูุชุดุฎูุต ===';
    
END $$;

-- ููุญ ุงูุตูุงุญูุงุช ููุฏูุงู
GRANT EXECUTE ON FUNCTION public.check_platform_admin(uuid) TO authenticated;
GRANT EXECUTE ON FUNCTION public.add_platform_admin(text) TO authenticated;